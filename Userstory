QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQAYAs a Payment Operations
I want to have a new reconsiliation report. 
to have all data  stored in BDAR to create a Cognos/BI Report on top.

Prerequesites:
Concept see https://orangesharing.com/x/-mhrI
To Do's:
Create new tables for SME/BB processing 
New table  TXM.BB_TRANSACTION  copy from FRAUD_VERDACHTSFAELLE

not columns ( MIAB_NR_ERST, MIAB_NR_AEND, DAT_AEND, ENTSCHEIDUNG_*,  MANUAL_RESPONSE_FILE_FLAG, DAT_LOCK, DAT_LOCK_BEARBEITER)

New additional columns in table BB_TRANSACTION

add new column MessageID (VARCHAR35)
add new column FileRef (VARCHAR18)
add new column SumMessageID(VARCHAR35)
add new column IntrBkSttlmDt(VARCHAR35)

-----------------------------------

New Table  TXM.BB_DECISION 

(System responses and manual responses will be written in this table with the results like in the current system hold, go, stop  for both TXM/TCM and RiskShield)

have columns (
TRANSACTIONID VARCHAR(100)
STATUS VARCHAR (10)
DAT_ERST DATE
Primary key for this table (TransactionId + Asset + Status)

Store new entry decisions on HOLD/GO/STOP in TXM/RiskShield and TCM in BB_DECISION 
column ASSET varchar(3) : values should be "TXM", "RS", "TCM" to distinguish between TXM/RS/TCM decisions. First we will only have TXM and TCM. Later when RS takes over we will see only RS and TCM.
column RSSCORE integer score from "RS" should be stored
column RSCOMMENT varchar(1000) comment from "RS" should be stored
column RSEVENTID varchar(100) eventId from "RS" should be stored
column RSREQUESTID varchar(100) eventId from "RS" should be stored

--------------------------
Create new tables FOR RETAIL

New table name TXM.RETAIL_TRANSACTION copy from BB_TRANSACTION
New table name TXM.RETAIL_DECISION copy from BB_DECISION



MIAB_NR_ERST
MIAB_NR_AEND
DAT_AEND
ENTSCHEIDUNG_KOMMENTAR
ENTSCHEIDUNG_STATUS
ENTSCHEIDUNG_BEGRUENDUNG_ID
ENTSCHEIDUNG_BEARBEITER
ENTSCHEIDUNG_BEARBEITUNGSDATUM
ENTSCHEIDUNG_BULK_ID
ENTSCHEIDUNG_MARKIERT
MANUAL_RESPONSE_FILE_FLAG
DAT_LOCK
DAT_LOCK_BEARBEITER

ID	1	1	1	N	NUMBER		No	None	22144	0	5E-5				False
TRANSAKTIONSID	2			N	VARCHAR2 (100 Char)		No	None	22144	0	5E-5				False
AUFTRAGGEBER	3			N	VARCHAR2 (70 Char)		No	None	22144	0	5E-5				False
AUFTRAGGEBERIBAN	4			N	VARCHAR2 (34 Char)		No	None	20180	0	5E-5				False
AUFTRAGGEBERBIC	5			N	VARCHAR2 (11 Char)		No	None	22042	0	5E-5				False
EMPFAENGER	6			N	VARCHAR2 (70 Char)		No	None	22144	0	5E-5				False
EMPFAENGERIBAN	7		1	Y	VARCHAR2 (100 Char)		No	None	20976	0	5E-5				False
EMPFAENGERBIC	8			Y	VARCHAR2 (11 Char)		No	None	22144	0	5E-5				False
BETRAG	9		1	N	NUMBER (18,2)		No	None	17948	0	6E-5				False
VWZ_UNSTRUKTURIERT	10			Y	VARCHAR2 (140 Char)		No	None	1	0	1				False
VWZ_STRUKTURIERT	11			Y	VARCHAR2 (140 Char)		No	None	0	22144	0				False
E2E_REFERENZ	12			Y	VARCHAR2 (35 Char)		No	None	1	0	1				False
ZIELLAND	13			Y	VARCHAR2 (4 Char)		No	None	1	0	1				False
AUFTRAGSDATUM	14		1	N	DATE		No	None	484	0	0,00207				False
ZV_DATEINAME	15			N	VARCHAR2 (100 Char)		No	None	22062	0	5E-5				False
AUFTRAGSWEG	16			Y	VARCHAR2 (100 Char)		No	None	0	22144	0				False
AUTHORISIERUNGSART	17			Y	VARCHAR2 (100 Char)		No	None	0	22144	0				False
LFD_NR_IN_ZV_DATEI	18			N	NUMBER		No	None	1	0	1				False
MIAB_NR_ERST	19			Y	NUMBER (10)		No	None	1	0	1				False
DAT_ERST	20			Y	DATE		No	None	7820	0	0,00013				False
MIAB_NR_AEND	21			Y	NUMBER (10)		No	None	1	0	1				False
DAT_AEND	22			Y	DATE		No	None	7820	0	0,00013				False
ENTSCHEIDUNG_KOMMENTAR	23			Y	VARCHAR2 (4000 Char)		No	None	0	22144	0				False
ENTSCHEIDUNG_STATUS	24			Y	VARCHAR2 (4 Char)		No	None	0	22144	0				False
ENTSCHEIDUNG_BEGRUENDUNG_ID	25			Y	NUMBER		No	None	0	22144	0				False
ENTSCHEIDUNG_BEARBEITER	26			Y	NUMBER		No	None	0	22144	0				False
ENTSCHEIDUNG_BEARBEITUNGSDATUM	27			Y	DATE		No	None	0	22144	0				False
MANUAL_RESPONSE_FILE_FLAG	28			Y	CHAR (1 Char)		No	None	0	22144	0				False
ZV_DATEI_EINGANGSDATUM	29			N	NUMBER (8)		No	None	2	0	0,5				False
DAT_LOCK	30			Y	DATE		No	None	0	22144	0				False
DAT_LOCK_BEARBEITER	31			Y	NUMBER (10)		No	None	0	22144	0				False
WAEHRUNG	32			Y	VARCHAR2 (3 Char)		No	None	1	0	1				False
BETRAG_FREMDWAEHRUNG	33			Y	NUMBER (18,2)		No	None	0	22144	0				False
FEDWIRENUMMER	34		1	Y	VARCHAR2 (12 Char)		No	None	1	0	1				False
ZV_FORMAT	35		1	Y	VARCHAR2 (10 Char)		No	None	1	0	1				False
AWV_BEACHTEN	36			Y	VARCHAR2 (1 Char)		No	None	1	0	1				False
ENTSCHEIDUNG_BULK_ID	37			Y	CHAR (36 Char)		No	None	0	22144	0				False
EMPFAENGERKONTONR	38			Y	VARCHAR2 (34 Char)		No	None	0	22144	0				False
ZIELKONTOVERBINDUNG	39			N	VARCHAR2 (200 Char)		No	None	20976	0	5E-5				False
KUNDENNUMMER	40			Y	VARCHAR2 (10 Char)		No	None	19560	0	5E-5				False
ENTSCHEIDUNG_MARKIERT	41			N	VARCHAR2 (1 Char)	'0'	No	None	1	0	1				False


CREATE TABLE TXM.BB_TRANSACTION (
    ID NUMBER,
    TRANSAKTIONSID VARCHAR2(100 CHAR),
    AUFTRAGGEBER VARCHAR2(70 CHAR),
    AUFTRAGGEBERIBAN VARCHAR2(34 CHAR),
    AUFTRAGGEBERBIC VARCHAR2(11 CHAR),
    EMPFAENGER VARCHAR2(70 CHAR),
    EMPFAENGERIBAN VARCHAR2(100 CHAR),
    EMPFAENGERBIC VARCHAR2(11 CHAR),
    BETRAG NUMBER(18,2),
    VWZ_UNSTRUKTURIERT VARCHAR2(140 CHAR),
    VWZ_STRUKTURIERT VARCHAR2(140 CHAR),
    E2E_REFERENZ VARCHAR2(35 CHAR),
    ZIELLAND VARCHAR2(4 CHAR),
    AUFTRAGSDATUM DATE,
    ZV_DATEINAME VARCHAR2(100 CHAR),
    AUFTRAGSWEG VARCHAR2(100 CHAR),
    AUTHORISIERUNGSART VARCHAR2(100 CHAR),
    LFD_NR_IN_ZV_DATEI NUMBER,
    ZV_DATEI_EINGANGSDATUM NUMBER(8),
    WAEHRUNG VARCHAR2(3 CHAR),
    BETRAG_FREMDWAEHRUNG NUMBER(18,2),
    FEDWIRENUMMER VARCHAR2(12 CHAR),
    ZV_FORMAT VARCHAR2(10 CHAR),
    AWV_BEACHTEN VARCHAR2(1 CHAR),
    EMPFAENGERKONTONR VARCHAR2(34 CHAR),
    ZIELKONTOVERBINDUNG VARCHAR2(200 CHAR),
    KUNDENNUMMER VARCHAR2(10 CHAR),
    -- Hinzufügen der neuen Spalten
    MessageID VARCHAR2(35 CHAR),
    FileRef VARCHAR2(18 CHAR),
    SumMessageID VARCHAR2(35 CHAR),
    IntrBkSttlmDt VARCHAR2(35 CHAR)
);

CREATE TABLE TXM.BB_DECISION (
    TRANSACTIONID VARCHAR2(100 CHAR),
    STATUS VARCHAR2(10 CHAR),
    DAT_ERST DATE,
    ASSET VARCHAR2(3 CHAR),
    RSSCORE INTEGER,
    RSCOMMENT VARCHAR2(1000 CHAR),
    RSEVENTID VARCHAR2(100 CHAR),
    RSREQUESTID VARCHAR2(100 CHAR),
    PRIMARY KEY (TRANSACTIONID, ASSET, STATUS)
);


CREATE TABLE TXM.RETAIL_TRANSACTION (
    ID NUMBER,
    TRANSAKTIONSID VARCHAR2(100 CHAR),
    AUFTRAGGEBER VARCHAR2(70 CHAR),
    AUFTRAGGEBERIBAN VARCHAR2(34 CHAR),
    AUFTRAGGEBERBIC VARCHAR2(11 CHAR),
    EMPFAENGER VARCHAR2(70 CHAR),
    EMPFAENGERIBAN VARCHAR2(100 CHAR),
    EMPFAENGERBIC VARCHAR2(11 CHAR),
    BETRAG NUMBER(18,2),
    VWZ_UNSTRUKTURIERT VARCHAR2(140 CHAR),
    VWZ_STRUKTURIERT VARCHAR2(140 CHAR),
    E2E_REFERENZ VARCHAR2(35 CHAR),
    ZIELLAND VARCHAR2(4 CHAR),
    AUFTRAGSDATUM DATE,
    ZV_DATEINAME VARCHAR2(100 CHAR),
    AUFTRAGSWEG VARCHAR2(100 CHAR),
    AUTHORISIERUNGSART VARCHAR2(100 CHAR),
    LFD_NR_IN_ZV_DATEI NUMBER,
    ZV_DATEI_EINGANGSDATUM NUMBER(8),
    WAEHRUNG VARCHAR2(3 CHAR),
    BETRAG_FREMDWAEHRUNG NUMBER(18,2),
    FEDWIRENUMMER VARCHAR2(12 CHAR),
    ZV_FORMAT VARCHAR2(10 CHAR),
    AWV_BEACHTEN VARCHAR2(1 CHAR),
    EMPFAENGERKONTONR VARCHAR2(34 CHAR),
    ZIELKONTOVERBINDUNG VARCHAR2(200 CHAR),
    KUNDENNUMMER VARCHAR2(10 CHAR),
    MessageID VARCHAR2(35 CHAR),
    FileRef VARCHAR2(18 CHAR),
    SumMessageID VARCHAR2(35 CHAR),
    IntrBkSttlmDt VARCHAR2(35 CHAR)
);


CREATE TABLE TXM.RETAIL_DECISION (
    TRANSACTIONID VARCHAR2(100 CHAR),
    STATUS VARCHAR2(10 CHAR),
    DAT_ERST DATE,
    ASSET VARCHAR2(3 CHAR),
    RSSCORE INTEGER,
    RSCOMMENT VARCHAR2(1000 CHAR),
    RSEVENTID VARCHAR2(100 CHAR),
    RSREQUESTID VARCHAR2(100 CHAR),
    PRIMARY KEY (TRANSACTIONID, ASSET, STATUS)
);


Um das erstellte SQL-Skript in das Git-Repository auf Azure DevOps hochzuladen, folgen Sie diesen Schritten:
1. Speichern des Skripts

    Speichern Sie das SQL-Skript als Datei. Zum Beispiel: create_txm_bb_decision_table.sql.

2. Initialisieren eines Git-Repositories (falls noch nicht geschehen)

    Öffnen Sie Ihr Terminal (Bash) oder die Git-Bash, wenn Sie unter Windows arbeiten.

    Navigieren Sie zu dem Verzeichnis, in dem Sie das Skript gespeichert haben:

    bash

cd /path/to/your/project

Initialisieren Sie ein neues Git-Repository (falls noch nicht vorhanden):

bash

    git init

3. Hinzufügen des Skripts zum Git-Repository

    Fügen Sie die Datei dem Staging-Bereich hinzu:

    bash

git add create_txm_bb_decision_table.sql

Committen Sie die Änderungen mit einer sinnvollen Nachricht:

bash

    git commit -m "Erstellen der Tabelle TXM.BB_DECISION"

4. Verbinden mit Azure DevOps und Hochladen des Skripts

    Erstellen eines Remote-Repositorys auf Azure DevOps:
        Melden Sie sich bei Ihrem Azure DevOps-Konto an.
        Navigieren Sie zu Ihrem Projekt.
        Gehen Sie zu Repos > Files.
        Klicken Sie auf New repository und folgen Sie den Anweisungen, um ein neues Repository zu erstellen (falls noch nicht vorhanden).

    Verbinden Sie Ihr lokales Repository mit dem Azure DevOps-Repository:

        Holen Sie sich die URL des Azure DevOps-Repositorys. Diese finden Sie in der Azure DevOps-Benutzeroberfläche unter Repos > Files > Clone.

        Fügen Sie das Remote-Repository zu Ihrem lokalen Repository hinzu:

        bash

    git remote add origin https://dev.azure.com/yourorganization/yourproject/_git/yourrepository

Pushen Sie die Änderungen zu Azure DevOps:

bash

    git push -u origin master

Zusammenfassung der Schritte in Bash

bash

# Navigieren Sie zu Ihrem Projektverzeichnis
cd /path/to/your/project

# Initialisieren Sie ein neues Git-Repository (falls noch nicht vorhanden)
git init

# Fügen Sie die SQL-Datei dem Staging-Bereich hinzu
git add create_txm_bb_decision_table.sql

# Committen Sie die Änderungen
git commit -m "Erstellen der Tabelle TXM.BB_DECISION"

# Fügen Sie das Remote-Repository von Azure DevOps hinzu
git remote add origin https://dev.azure.com/yourorganization/yourproject/_git/yourrepository

# Pushen Sie die Änderungen zu Azure DevOps
git push -u origin master

Nach diesen Schritten wird Ihr SQL-Skript im Git-Repository auf Azure DevOps gespeichert sein. Von dort aus kann es von anderen Teammitgliedern überprüft, getestet und verwendet werden.



ALTER TABLE TXM.FRAUD_VERDACHTSFAELLE ADD (
  CONSTRAINT AWV_BEACHTEN_CHK
  CHECK (AWV_BEACHTEN is null or (AWV_BEACHTEN in ('J','N') and AWV_BEACHTEN = upper(AWV_BEACHTEN)))
  ENABLE VALIDATE
,  CONSTRAINT FRAUD_VERDACHTSFAELLE_PK
  PRIMARY KEY
  (ID)
  USING INDEX TXM.FRAUD_VERDACHTSFAELLE_PK
  ENABLE VALIDATE);


  ID                              NUMBER,
  TRANSAKTIONSID                  VARCHAR2(100 CHAR) NOT NULL,
  AUFTRAGGEBER                    VARCHAR2(70 CHAR) NOT NULL,
  AUFTRAGGEBERIBAN                VARCHAR2(34 CHAR) NOT NULL,
  AUFTRAGGEBERBIC                 VARCHAR2(11 CHAR) NOT NULL,
  EMPFAENGER                      VARCHAR2(70 CHAR) NOT NULL,
  EMPFAENGERIBAN                  VARCHAR2(100 CHAR),
  EMPFAENGERBIC                   VARCHAR2(11 CHAR),
  BETRAG                          NUMBER(18,2)  NOT NULL,
  VWZ_UNSTRUKTURIERT              VARCHAR2(140 CHAR),
  VWZ_STRUKTURIERT                VARCHAR2(140 CHAR),
  E2E_REFERENZ                    VARCHAR2(35 CHAR),
  ZIELLAND                        VARCHAR2(4 CHAR),
  AUFTRAGSDATUM                   DATE          NOT NULL,
  ZV_DATEINAME                    VARCHAR2(100 CHAR) NOT NULL,
  AUFTRAGSWEG                     VARCHAR2(100 CHAR),
  AUTHORISIERUNGSART              VARCHAR2(100 CHAR),
  LFD_NR_IN_ZV_DATEI              NUMBER        NOT NULL,
  MIAB_NR_ERST                    NUMBER(10),
  DAT_ERST                        DATE,
  MIAB_NR_AEND                    NUMBER(10),
  DAT_AEND                        DATE,
  ENTSCHEIDUNG_KOMMENTAR          VARCHAR2(4000 CHAR),
  ENTSCHEIDUNG_STATUS             VARCHAR2(4 CHAR),
  ENTSCHEIDUNG_BEGRUENDUNG_ID     NUMBER,
  ENTSCHEIDUNG_BEARBEITER         NUMBER,
  ENTSCHEIDUNG_BEARBEITUNGSDATUM  DATE,
  MANUAL_RESPONSE_FILE_FLAG       CHAR(1 CHAR),
  ZV_DATEI_EINGANGSDATUM          NUMBER(8)     NOT NULL,
  DAT_LOCK                        DATE,
  DAT_LOCK_BEARBEITER             NUMBER(10),
  WAEHRUNG                        VARCHAR2(3 CHAR),
  BETRAG_FREMDWAEHRUNG            NUMBER(18,2),
  FEDWIRENUMMER                   VARCHAR2(12 CHAR),
  ZV_FORMAT                       VARCHAR2(10 CHAR),
  AWV_BEACHTEN                    VARCHAR2(1 CHAR),
  ENTSCHEIDUNG_BULK_ID            CHAR(36 CHAR),
  EMPFAENGERKONTONR               VARCHAR2(34 CHAR),
  ZIELKONTOVERBINDUNG             VARCHAR2(200 CHAR) NOT NULL,
  KUNDENNUMMER                    VARCHAR2(10 CHAR),
  ENTSCHEIDUNG_MARKIERT           VARCHAR2(1 CHAR) DEFAULT '0' NOT NULL
